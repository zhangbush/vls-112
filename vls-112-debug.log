============= vls-112 start =============

Info-No.1-lv2: file_symbol-->
	
	COMPOSITE:====================================================
	{}module_decl {}import_molule {}import_molule {}import_molule {}import_molule {}import_molule {}import_molule {}import_molule {}import_molule {}struct 
	{}struct {}struct {}fn {}fn {}method {}fn {}method {}method {}method {}method 
	()fn ()fn ()fn ()fn ()fn ()fn ()fn ()fn ()fn ()fn 
	()fn ()fn 
	
	

	['new_symboldb', 'set_module_lookup_paths', 'new_range']

	{'new_symboldb': sym.SymbolStr{
	    name: '{}fn'
	    typ: composite
	    start_index: 197
	    end_index: 278
	    text: 'fn new_symboldb(root_path string,vexe string)Symboldb{ 	os.setenv('VEXE', vexe, true) 	//初始化v pref 	mut args_and_flags := [root_path] 	v_env_args := util.join_env_vflags_and_os_args() 	for args_i := os.args.len;args_i<v_env_args.len;args_i++{ 		args_and_flags << v_env_args[args_i] 	}'
	}, 'set_module_lookup_paths': sym.SymbolStr{
	    name: '{}fn'
	    typ: composite
	    start_index: 350
	    end_index: 406
	    text: 'fn set_module_lookup_paths(mut vbuilder builder.Builder,prefs &pref.Preferences) { 	vbuilder.module_search_paths = [] 	if prefs.is_test { 		vbuilder.module_search_paths << os.dir(vbuilder.compiled_dir) // pdir of _test.v 	}'
	}, 'new_range': sym.SymbolStr{
	    name: '{}fn'
	    typ: composite
	    start_index: 2340
	    end_index: 2388
	    text: 'fn new_range(start_line int,start_character int,end_line int,end_character int)lsp.Range{ 	return lsp.Range{ 		start: lsp.Position{ 			line:start_line 			character:start_character 		}'
	}}

	[]

	{}

	[sym.SymbolStr{
	    name: '{}module_decl'
	    typ: composite
	    start_index: 0
	    end_index: 3
	    text: 'module server  '
	}, sym.SymbolStr{
	    name: '{}import_molule'
	    typ: composite
	    start_index: 4
	    end_index: 7
	    text: 'import sym '
	}, sym.SymbolStr{
	    name: '{}import_molule'
	    typ: composite
	    start_index: 8
	    end_index: 11
	    text: 'import os '
	}, sym.SymbolStr{
	    name: '{}import_molule'
	    typ: composite
	    start_index: 12
	    end_index: 17
	    text: 'import crypto.sha1 '
	}, sym.SymbolStr{
	    name: '{}import_molule'
	    typ: composite
	    start_index: 18
	    end_index: 21
	    text: 'import lsp '
	}, sym.SymbolStr{
	    name: '{}import_molule'
	    typ: composite
	    start_index: 22
	    end_index: 27
	    text: 'import lang.vlang  '
	}, sym.SymbolStr{
	    name: '{}import_molule'
	    typ: composite
	    start_index: 28
	    end_index: 33
	    text: 'import v.pref '
	}, sym.SymbolStr{
	    name: '{}import_molule'
	    typ: composite
	    start_index: 34
	    end_index: 39
	    text: 'import v.builder '
	}, sym.SymbolStr{
	    name: '{}import_molule'
	    typ: composite
	    start_index: 40
	    end_index: 45
	    text: 'import v.util  '
	}, sym.SymbolStr{
	    name: '{}struct'
	    typ: composite
	    start_index: 46
	    end_index: 80
	    text: 'struct Symboldb{ mut: 	file_symbol_cache map[string]&FileSymbol 	now_file string 	prefs &pref.Preferences 	vbuilder builder.Builder }'
	}, sym.SymbolStr{
	    name: '{}struct'
	    typ: composite
	    start_index: 82
	    end_index: 162
	    text: 'struct FileSymbol{ mut: 	//文件哈希值 	hexhash string 	context sym.Context 	runtime sym.Runtime 	//文件统计信息 	//文件的模块名 缺省时为main 	module_name string 	//所有引入的外部模块和全名 ex:import aa.bb.cc = cc:['aa','bb','cc'] 	import_module map[string][]string 	//其他模块引入的全局函数和结构体 ex:import aa.ff as tt{f1,f2} = f1:'tt',f2:'tt' 	all_other_module_global map[string]string 	//本文件包含的全部内部函数 	all_fn map[string]sym.Symbol 	//本文件包含的全部公共函数 	all_pub_fn map[string]sym.Symbol }'
	}, sym.SymbolStr{
	    name: '{}struct'
	    typ: composite
	    start_index: 164
	    end_index: 195
	    text: 'struct DfLocationLink{ 	is_found bool 	uri string 	target_range lsp.Range 	target_selection_range lsp.Range 	origin_selection_range lsp.Range }'
	}, sym.SymbolStr{
	    name: '{}fn'
	    typ: composite
	    start_index: 197
	    end_index: 278
	    text: 'fn new_symboldb(root_path string,vexe string)Symboldb{ 	os.setenv('VEXE', vexe, true) 	//初始化v pref 	mut args_and_flags := [root_path] 	v_env_args := util.join_env_vflags_and_os_args() 	for args_i := os.args.len;args_i<v_env_args.len;args_i++{ 		args_and_flags << v_env_args[args_i] 	}'
	}, sym.SymbolStr{
	    name: '{}fn'
	    typ: composite
	    start_index: 350
	    end_index: 406
	    text: 'fn set_module_lookup_paths(mut vbuilder builder.Builder,prefs &pref.Preferences) { 	vbuilder.module_search_paths = [] 	if prefs.is_test { 		vbuilder.module_search_paths << os.dir(vbuilder.compiled_dir) // pdir of _test.v 	}'
	}, sym.SymbolStr{
	    name: '{}method'
	    typ: composite
	    start_index: 448
	    end_index: 486
	    text: 'fn (mut symdb Symboldb) parse(mut ls Vls112,file_path string)?{  	if !os.is_file(file_path){ 		return 	}'
	}, sym.SymbolStr{
	    name: '{}fn'
	    typ: composite
	    start_index: 2340
	    end_index: 2388
	    text: 'fn new_range(start_line int,start_character int,end_line int,end_character int)lsp.Range{ 	return lsp.Range{ 		start: lsp.Position{ 			line:start_line 			character:start_character 		}'
	}, sym.SymbolStr{
	    name: '{}method'
	    typ: composite
	    start_index: 2413
	    end_index: 2461
	    text: 'fn (mut symdb Symboldb) search_df_locationlink(mut ls Vls112,line int,character int)?DfLocationLink{ 	if symdb.now_file == ''{ 		return error('No file to search symbol,please Execute the Symboldb.parse(file_path) first.') 	}'
	}, sym.SymbolStr{
	    name: '{}method'
	    typ: composite
	    start_index: 2928
	    end_index: 3040
	    text: 'fn (mut symdb Symboldb) find_own_module_df_locationlink(mut ls Vls112,fn_name string,fn_name_sym sym.Symbol)?DfLocationLink{ 	ls.logger.info('find_own_module_df_locationlink-->',2)? 	ls.logger.text(fn_name,2,'\t')?  	own_file_symbol := symdb.file_symbol_cache[symdb.now_file]  	//是否为外部引用的全局函数 	if fn_name in own_file_symbol.all_other_module_global{ 		module_name := own_file_symbol.all_other_module_global[fn_name] 		return symdb.find_other_module_df_locationlink(mut ls,fn_name,module_name,fn_name_sym) 	}'
	}, sym.SymbolStr{
	    name: '{}method'
	    typ: composite
	    start_index: 3815
	    end_index: 3875
	    text: 'fn (mut symdb Symboldb) get_own_modele_files()?[]string{ 	module_dir := os.dir(symdb.now_file) 	mut files := os.ls(module_dir)? 	return symdb.prefs.should_compile_filtered_files(module_dir, files) }'
	}, sym.SymbolStr{
	    name: '{}method'
	    typ: composite
	    start_index: 3877
	    end_index: 3934
	    text: 'fn (mut symdb Symboldb) find_other_module_df_locationlink(mut ls Vls112,fn_name string,module_name string,fn_name_sym sym.Symbol)?DfLocationLink{ 	 	ls.logger.info('find_other_module_df_locationlink-->',2)?  	return DfLocationLink{ 		is_found:false 	}'
	}, sym.SymbolStr{
	    name: '()fn'
	    typ: sub_composite
	    start_index: 212
	    end_index: 223
	    text: 'os.setenv('VEXE', vexe, true)'
	}, sym.SymbolStr{
	    name: '()fn'
	    typ: sub_composite
	    start_index: 241
	    end_index: 245
	    text: 'util.join_env_vflags_and_os_args()'
	}, sym.SymbolStr{
	    name: '()fn'
	    typ: sub_composite
	    start_index: 395
	    end_index: 402
	    text: 'os.dir(vbuilder.compiled_dir)'
	}, sym.SymbolStr{
	    name: '()fn'
	    typ: sub_composite
	    start_index: 476
	    end_index: 481
	    text: 'os.is_file(file_path)'
	}, sym.SymbolStr{
	    name: '()fn'
	    typ: sub_composite
	    start_index: 2456
	    end_index: 2459
	    text: 'error('No file to search symbol,please Execute the Symboldb.parse(file_path) first.')'
	}, sym.SymbolStr{
	    name: '()fn'
	    typ: sub_composite
	    start_index: 2960
	    end_index: 2969
	    text: 'ls.logger.info('find_own_module_df_locationlink-->',2)'
	}, sym.SymbolStr{
	    name: '()fn'
	    typ: sub_composite
	    start_index: 2972
	    end_index: 2983
	    text: 'ls.logger.text(fn_name,2,'\t')'
	}, sym.SymbolStr{
	    name: '()fn'
	    typ: sub_composite
	    start_index: 3025
	    end_index: 3038
	    text: 'symdb.find_other_module_df_locationlink(mut ls,fn_name,module_name,fn_name_sym)'
	}, sym.SymbolStr{
	    name: '()fn'
	    typ: sub_composite
	    start_index: 3838
	    end_index: 3845
	    text: 'os.dir(symdb.now_file)'
	}, sym.SymbolStr{
	    name: '()fn'
	    typ: sub_composite
	    start_index: 3853
	    end_index: 3858
	    text: 'os.ls(module_dir)'
	}, sym.SymbolStr{
	    name: '()fn'
	    typ: sub_composite
	    start_index: 3863
	    end_index: 3873
	    text: 'symdb.prefs.should_compile_filtered_files(module_dir, files)'
	}, sym.SymbolStr{
	    name: '()fn'
	    typ: sub_composite
	    start_index: 3913
	    end_index: 3922
	    text: 'ls.logger.info('find_other_module_df_locationlink-->',2)'
	}]

Info-No.2-lv2: file_symbol-->
	
	COMPOSITE:====================================================
	{}module_decl {}import_molule {}import_molule {}import_molule {}import_molule {}import_molule {}import_molule {}import_molule {}import_molule {}struct 
	{}struct {}struct {}fn {}fn {}method {}fn {}method {}method {}method {}method 
	()fn ()fn ()fn ()fn ()fn ()fn ()fn ()fn ()fn ()fn 
	()fn ()fn 
	
	

	['new_symboldb', 'set_module_lookup_paths', 'new_range']

	{'new_symboldb': sym.SymbolStr{
	    name: '{}fn'
	    typ: composite
	    start_index: 197
	    end_index: 278
	    text: 'fn new_symboldb(root_path string,vexe string)Symboldb{ 	os.setenv('VEXE', vexe, true) 	//初始化v pref 	mut args_and_flags := [root_path] 	v_env_args := util.join_env_vflags_and_os_args() 	for args_i := os.args.len;args_i<v_env_args.len;args_i++{ 		args_and_flags << v_env_args[args_i] 	}'
	}, 'set_module_lookup_paths': sym.SymbolStr{
	    name: '{}fn'
	    typ: composite
	    start_index: 350
	    end_index: 406
	    text: 'fn set_module_lookup_paths(mut vbuilder builder.Builder,prefs &pref.Preferences) { 	vbuilder.module_search_paths = [] 	if prefs.is_test { 		vbuilder.module_search_paths << os.dir(vbuilder.compiled_dir) // pdir of _test.v 	}'
	}, 'new_range': sym.SymbolStr{
	    name: '{}fn'
	    typ: composite
	    start_index: 2340
	    end_index: 2388
	    text: 'fn new_range(start_line int,start_character int,end_line int,end_character int)lsp.Range{ 	return lsp.Range{ 		start: lsp.Position{ 			line:start_line 			character:start_character 		}'
	}}

	[]

	{}

	[sym.SymbolStr{
	    name: '{}module_decl'
	    typ: composite
	    start_index: 0
	    end_index: 3
	    text: 'module server  '
	}, sym.SymbolStr{
	    name: '{}import_molule'
	    typ: composite
	    start_index: 4
	    end_index: 7
	    text: 'import sym '
	}, sym.SymbolStr{
	    name: '{}import_molule'
	    typ: composite
	    start_index: 8
	    end_index: 11
	    text: 'import os '
	}, sym.SymbolStr{
	    name: '{}import_molule'
	    typ: composite
	    start_index: 12
	    end_index: 17
	    text: 'import crypto.sha1 '
	}, sym.SymbolStr{
	    name: '{}import_molule'
	    typ: composite
	    start_index: 18
	    end_index: 21
	    text: 'import lsp '
	}, sym.SymbolStr{
	    name: '{}import_molule'
	    typ: composite
	    start_index: 22
	    end_index: 27
	    text: 'import lang.vlang  '
	}, sym.SymbolStr{
	    name: '{}import_molule'
	    typ: composite
	    start_index: 28
	    end_index: 33
	    text: 'import v.pref '
	}, sym.SymbolStr{
	    name: '{}import_molule'
	    typ: composite
	    start_index: 34
	    end_index: 39
	    text: 'import v.builder '
	}, sym.SymbolStr{
	    name: '{}import_molule'
	    typ: composite
	    start_index: 40
	    end_index: 45
	    text: 'import v.util  '
	}, sym.SymbolStr{
	    name: '{}struct'
	    typ: composite
	    start_index: 46
	    end_index: 80
	    text: 'struct Symboldb{ mut: 	file_symbol_cache map[string]&FileSymbol 	now_file string 	prefs &pref.Preferences 	vbuilder builder.Builder }'
	}, sym.SymbolStr{
	    name: '{}struct'
	    typ: composite
	    start_index: 82
	    end_index: 162
	    text: 'struct FileSymbol{ mut: 	//文件哈希值 	hexhash string 	context sym.Context 	runtime sym.Runtime 	//文件统计信息 	//文件的模块名 缺省时为main 	module_name string 	//所有引入的外部模块和全名 ex:import aa.bb.cc = cc:['aa','bb','cc'] 	import_module map[string][]string 	//其他模块引入的全局函数和结构体 ex:import aa.ff as tt{f1,f2} = f1:'tt',f2:'tt' 	all_other_module_global map[string]string 	//本文件包含的全部内部函数 	all_fn map[string]sym.Symbol 	//本文件包含的全部公共函数 	all_pub_fn map[string]sym.Symbol }'
	}, sym.SymbolStr{
	    name: '{}struct'
	    typ: composite
	    start_index: 164
	    end_index: 195
	    text: 'struct DfLocationLink{ 	is_found bool 	uri string 	target_range lsp.Range 	target_selection_range lsp.Range 	origin_selection_range lsp.Range }'
	}, sym.SymbolStr{
	    name: '{}fn'
	    typ: composite
	    start_index: 197
	    end_index: 278
	    text: 'fn new_symboldb(root_path string,vexe string)Symboldb{ 	os.setenv('VEXE', vexe, true) 	//初始化v pref 	mut args_and_flags := [root_path] 	v_env_args := util.join_env_vflags_and_os_args() 	for args_i := os.args.len;args_i<v_env_args.len;args_i++{ 		args_and_flags << v_env_args[args_i] 	}'
	}, sym.SymbolStr{
	    name: '{}fn'
	    typ: composite
	    start_index: 350
	    end_index: 406
	    text: 'fn set_module_lookup_paths(mut vbuilder builder.Builder,prefs &pref.Preferences) { 	vbuilder.module_search_paths = [] 	if prefs.is_test { 		vbuilder.module_search_paths << os.dir(vbuilder.compiled_dir) // pdir of _test.v 	}'
	}, sym.SymbolStr{
	    name: '{}method'
	    typ: composite
	    start_index: 448
	    end_index: 486
	    text: 'fn (mut symdb Symboldb) parse(mut ls Vls112,file_path string)?{  	if !os.is_file(file_path){ 		return 	}'
	}, sym.SymbolStr{
	    name: '{}fn'
	    typ: composite
	    start_index: 2340
	    end_index: 2388
	    text: 'fn new_range(start_line int,start_character int,end_line int,end_character int)lsp.Range{ 	return lsp.Range{ 		start: lsp.Position{ 			line:start_line 			character:start_character 		}'
	}, sym.SymbolStr{
	    name: '{}method'
	    typ: composite
	    start_index: 2413
	    end_index: 2461
	    text: 'fn (mut symdb Symboldb) search_df_locationlink(mut ls Vls112,line int,character int)?DfLocationLink{ 	if symdb.now_file == ''{ 		return error('No file to search symbol,please Execute the Symboldb.parse(file_path) first.') 	}'
	}, sym.SymbolStr{
	    name: '{}method'
	    typ: composite
	    start_index: 2928
	    end_index: 3040
	    text: 'fn (mut symdb Symboldb) find_own_module_df_locationlink(mut ls Vls112,fn_name string,fn_name_sym sym.Symbol)?DfLocationLink{ 	ls.logger.info('find_own_module_df_locationlink-->',2)? 	ls.logger.text(fn_name,2,'\t')?  	own_file_symbol := symdb.file_symbol_cache[symdb.now_file]  	//是否为外部引用的全局函数 	if fn_name in own_file_symbol.all_other_module_global{ 		module_name := own_file_symbol.all_other_module_global[fn_name] 		return symdb.find_other_module_df_locationlink(mut ls,fn_name,module_name,fn_name_sym) 	}'
	}, sym.SymbolStr{
	    name: '{}method'
	    typ: composite
	    start_index: 3815
	    end_index: 3875
	    text: 'fn (mut symdb Symboldb) get_own_modele_files()?[]string{ 	module_dir := os.dir(symdb.now_file) 	mut files := os.ls(module_dir)? 	return symdb.prefs.should_compile_filtered_files(module_dir, files) }'
	}, sym.SymbolStr{
	    name: '{}method'
	    typ: composite
	    start_index: 3877
	    end_index: 3934
	    text: 'fn (mut symdb Symboldb) find_other_module_df_locationlink(mut ls Vls112,fn_name string,module_name string,fn_name_sym sym.Symbol)?DfLocationLink{ 	 	ls.logger.info('find_other_module_df_locationlink-->',2)?  	return DfLocationLink{ 		is_found:false 	}'
	}, sym.SymbolStr{
	    name: '()fn'
	    typ: sub_composite
	    start_index: 212
	    end_index: 223
	    text: 'os.setenv('VEXE', vexe, true)'
	}, sym.SymbolStr{
	    name: '()fn'
	    typ: sub_composite
	    start_index: 241
	    end_index: 245
	    text: 'util.join_env_vflags_and_os_args()'
	}, sym.SymbolStr{
	    name: '()fn'
	    typ: sub_composite
	    start_index: 395
	    end_index: 402
	    text: 'os.dir(vbuilder.compiled_dir)'
	}, sym.SymbolStr{
	    name: '()fn'
	    typ: sub_composite
	    start_index: 476
	    end_index: 481
	    text: 'os.is_file(file_path)'
	}, sym.SymbolStr{
	    name: '()fn'
	    typ: sub_composite
	    start_index: 2456
	    end_index: 2459
	    text: 'error('No file to search symbol,please Execute the Symboldb.parse(file_path) first.')'
	}, sym.SymbolStr{
	    name: '()fn'
	    typ: sub_composite
	    start_index: 2960
	    end_index: 2969
	    text: 'ls.logger.info('find_own_module_df_locationlink-->',2)'
	}, sym.SymbolStr{
	    name: '()fn'
	    typ: sub_composite
	    start_index: 2972
	    end_index: 2983
	    text: 'ls.logger.text(fn_name,2,'\t')'
	}, sym.SymbolStr{
	    name: '()fn'
	    typ: sub_composite
	    start_index: 3025
	    end_index: 3038
	    text: 'symdb.find_other_module_df_locationlink(mut ls,fn_name,module_name,fn_name_sym)'
	}, sym.SymbolStr{
	    name: '()fn'
	    typ: sub_composite
	    start_index: 3838
	    end_index: 3845
	    text: 'os.dir(symdb.now_file)'
	}, sym.SymbolStr{
	    name: '()fn'
	    typ: sub_composite
	    start_index: 3853
	    end_index: 3858
	    text: 'os.ls(module_dir)'
	}, sym.SymbolStr{
	    name: '()fn'
	    typ: sub_composite
	    start_index: 3863
	    end_index: 3873
	    text: 'symdb.prefs.should_compile_filtered_files(module_dir, files)'
	}, sym.SymbolStr{
	    name: '()fn'
	    typ: sub_composite
	    start_index: 3913
	    end_index: 3922
	    text: 'ls.logger.info('find_other_module_df_locationlink-->',2)'
	}]

Info-No.3-lv2: file_symbol-->
	
	COMPOSITE:====================================================
	{}module_decl {}import_molule {}import_molule {}import_molule {}import_molule {}import_molule {}import_molule {}import_molule {}import_molule {}struct 
	{}struct {}struct {}fn {}fn {}method {}fn {}method {}method {}method {}method 
	()fn ()fn ()fn ()fn ()fn ()fn ()fn ()fn ()fn ()fn 
	()fn ()fn 
	
	

	['new_symboldb', 'set_module_lookup_paths', 'new_range']

	{'new_symboldb': sym.SymbolStr{
	    name: '{}fn'
	    typ: composite
	    start_index: 197
	    end_index: 278
	    text: 'fn new_symboldb(root_path string,vexe string)Symboldb{ 	os.setenv('VEXE', vexe, true) 	//初始化v pref 	mut args_and_flags := [root_path] 	v_env_args := util.join_env_vflags_and_os_args() 	for args_i := os.args.len;args_i<v_env_args.len;args_i++{ 		args_and_flags << v_env_args[args_i] 	}'
	}, 'set_module_lookup_paths': sym.SymbolStr{
	    name: '{}fn'
	    typ: composite
	    start_index: 350
	    end_index: 406
	    text: 'fn set_module_lookup_paths(mut vbuilder builder.Builder,prefs &pref.Preferences) { 	vbuilder.module_search_paths = [] 	if prefs.is_test { 		vbuilder.module_search_paths << os.dir(vbuilder.compiled_dir) // pdir of _test.v 	}'
	}, 'new_range': sym.SymbolStr{
	    name: '{}fn'
	    typ: composite
	    start_index: 2340
	    end_index: 2388
	    text: 'fn new_range(start_line int,start_character int,end_line int,end_character int)lsp.Range{ 	return lsp.Range{ 		start: lsp.Position{ 			line:start_line 			character:start_character 		}'
	}}

	[]

	{}

	[sym.SymbolStr{
	    name: '{}module_decl'
	    typ: composite
	    start_index: 0
	    end_index: 3
	    text: 'module server  '
	}, sym.SymbolStr{
	    name: '{}import_molule'
	    typ: composite
	    start_index: 4
	    end_index: 7
	    text: 'import sym '
	}, sym.SymbolStr{
	    name: '{}import_molule'
	    typ: composite
	    start_index: 8
	    end_index: 11
	    text: 'import os '
	}, sym.SymbolStr{
	    name: '{}import_molule'
	    typ: composite
	    start_index: 12
	    end_index: 17
	    text: 'import crypto.sha1 '
	}, sym.SymbolStr{
	    name: '{}import_molule'
	    typ: composite
	    start_index: 18
	    end_index: 21
	    text: 'import lsp '
	}, sym.SymbolStr{
	    name: '{}import_molule'
	    typ: composite
	    start_index: 22
	    end_index: 27
	    text: 'import lang.vlang  '
	}, sym.SymbolStr{
	    name: '{}import_molule'
	    typ: composite
	    start_index: 28
	    end_index: 33
	    text: 'import v.pref '
	}, sym.SymbolStr{
	    name: '{}import_molule'
	    typ: composite
	    start_index: 34
	    end_index: 39
	    text: 'import v.builder '
	}, sym.SymbolStr{
	    name: '{}import_molule'
	    typ: composite
	    start_index: 40
	    end_index: 45
	    text: 'import v.util  '
	}, sym.SymbolStr{
	    name: '{}struct'
	    typ: composite
	    start_index: 46
	    end_index: 80
	    text: 'struct Symboldb{ mut: 	file_symbol_cache map[string]&FileSymbol 	now_file string 	prefs &pref.Preferences 	vbuilder builder.Builder }'
	}, sym.SymbolStr{
	    name: '{}struct'
	    typ: composite
	    start_index: 82
	    end_index: 162
	    text: 'struct FileSymbol{ mut: 	//文件哈希值 	hexhash string 	context sym.Context 	runtime sym.Runtime 	//文件统计信息 	//文件的模块名 缺省时为main 	module_name string 	//所有引入的外部模块和全名 ex:import aa.bb.cc = cc:['aa','bb','cc'] 	import_module map[string][]string 	//其他模块引入的全局函数和结构体 ex:import aa.ff as tt{f1,f2} = f1:'tt',f2:'tt' 	all_other_module_global map[string]string 	//本文件包含的全部内部函数 	all_fn map[string]sym.Symbol 	//本文件包含的全部公共函数 	all_pub_fn map[string]sym.Symbol }'
	}, sym.SymbolStr{
	    name: '{}struct'
	    typ: composite
	    start_index: 164
	    end_index: 195
	    text: 'struct DfLocationLink{ 	is_found bool 	uri string 	target_range lsp.Range 	target_selection_range lsp.Range 	origin_selection_range lsp.Range }'
	}, sym.SymbolStr{
	    name: '{}fn'
	    typ: composite
	    start_index: 197
	    end_index: 278
	    text: 'fn new_symboldb(root_path string,vexe string)Symboldb{ 	os.setenv('VEXE', vexe, true) 	//初始化v pref 	mut args_and_flags := [root_path] 	v_env_args := util.join_env_vflags_and_os_args() 	for args_i := os.args.len;args_i<v_env_args.len;args_i++{ 		args_and_flags << v_env_args[args_i] 	}'
	}, sym.SymbolStr{
	    name: '{}fn'
	    typ: composite
	    start_index: 350
	    end_index: 406
	    text: 'fn set_module_lookup_paths(mut vbuilder builder.Builder,prefs &pref.Preferences) { 	vbuilder.module_search_paths = [] 	if prefs.is_test { 		vbuilder.module_search_paths << os.dir(vbuilder.compiled_dir) // pdir of _test.v 	}'
	}, sym.SymbolStr{
	    name: '{}method'
	    typ: composite
	    start_index: 448
	    end_index: 486
	    text: 'fn (mut symdb Symboldb) parse(mut ls Vls112,file_path string)?{  	if !os.is_file(file_path){ 		return 	}'
	}, sym.SymbolStr{
	    name: '{}fn'
	    typ: composite
	    start_index: 2340
	    end_index: 2388
	    text: 'fn new_range(start_line int,start_character int,end_line int,end_character int)lsp.Range{ 	return lsp.Range{ 		start: lsp.Position{ 			line:start_line 			character:start_character 		}'
	}, sym.SymbolStr{
	    name: '{}method'
	    typ: composite
	    start_index: 2413
	    end_index: 2461
	    text: 'fn (mut symdb Symboldb) search_df_locationlink(mut ls Vls112,line int,character int)?DfLocationLink{ 	if symdb.now_file == ''{ 		return error('No file to search symbol,please Execute the Symboldb.parse(file_path) first.') 	}'
	}, sym.SymbolStr{
	    name: '{}method'
	    typ: composite
	    start_index: 2928
	    end_index: 3040
	    text: 'fn (mut symdb Symboldb) find_own_module_df_locationlink(mut ls Vls112,fn_name string,fn_name_sym sym.Symbol)?DfLocationLink{ 	ls.logger.info('find_own_module_df_locationlink-->',2)? 	ls.logger.text(fn_name,2,'\t')?  	own_file_symbol := symdb.file_symbol_cache[symdb.now_file]  	//是否为外部引用的全局函数 	if fn_name in own_file_symbol.all_other_module_global{ 		module_name := own_file_symbol.all_other_module_global[fn_name] 		return symdb.find_other_module_df_locationlink(mut ls,fn_name,module_name,fn_name_sym) 	}'
	}, sym.SymbolStr{
	    name: '{}method'
	    typ: composite
	    start_index: 3815
	    end_index: 3875
	    text: 'fn (mut symdb Symboldb) get_own_modele_files()?[]string{ 	module_dir := os.dir(symdb.now_file) 	mut files := os.ls(module_dir)? 	return symdb.prefs.should_compile_filtered_files(module_dir, files) }'
	}, sym.SymbolStr{
	    name: '{}method'
	    typ: composite
	    start_index: 3877
	    end_index: 3934
	    text: 'fn (mut symdb Symboldb) find_other_module_df_locationlink(mut ls Vls112,fn_name string,module_name string,fn_name_sym sym.Symbol)?DfLocationLink{ 	 	ls.logger.info('find_other_module_df_locationlink-->',2)?  	return DfLocationLink{ 		is_found:false 	}'
	}, sym.SymbolStr{
	    name: '()fn'
	    typ: sub_composite
	    start_index: 212
	    end_index: 223
	    text: 'os.setenv('VEXE', vexe, true)'
	}, sym.SymbolStr{
	    name: '()fn'
	    typ: sub_composite
	    start_index: 241
	    end_index: 245
	    text: 'util.join_env_vflags_and_os_args()'
	}, sym.SymbolStr{
	    name: '()fn'
	    typ: sub_composite
	    start_index: 395
	    end_index: 402
	    text: 'os.dir(vbuilder.compiled_dir)'
	}, sym.SymbolStr{
	    name: '()fn'
	    typ: sub_composite
	    start_index: 476
	    end_index: 481
	    text: 'os.is_file(file_path)'
	}, sym.SymbolStr{
	    name: '()fn'
	    typ: sub_composite
	    start_index: 2456
	    end_index: 2459
	    text: 'error('No file to search symbol,please Execute the Symboldb.parse(file_path) first.')'
	}, sym.SymbolStr{
	    name: '()fn'
	    typ: sub_composite
	    start_index: 2960
	    end_index: 2969
	    text: 'ls.logger.info('find_own_module_df_locationlink-->',2)'
	}, sym.SymbolStr{
	    name: '()fn'
	    typ: sub_composite
	    start_index: 2972
	    end_index: 2983
	    text: 'ls.logger.text(fn_name,2,'\t')'
	}, sym.SymbolStr{
	    name: '()fn'
	    typ: sub_composite
	    start_index: 3025
	    end_index: 3038
	    text: 'symdb.find_other_module_df_locationlink(mut ls,fn_name,module_name,fn_name_sym)'
	}, sym.SymbolStr{
	    name: '()fn'
	    typ: sub_composite
	    start_index: 3838
	    end_index: 3845
	    text: 'os.dir(symdb.now_file)'
	}, sym.SymbolStr{
	    name: '()fn'
	    typ: sub_composite
	    start_index: 3853
	    end_index: 3858
	    text: 'os.ls(module_dir)'
	}, sym.SymbolStr{
	    name: '()fn'
	    typ: sub_composite
	    start_index: 3863
	    end_index: 3873
	    text: 'symdb.prefs.should_compile_filtered_files(module_dir, files)'
	}, sym.SymbolStr{
	    name: '()fn'
	    typ: sub_composite
	    start_index: 3913
	    end_index: 3922
	    text: 'ls.logger.info('find_other_module_df_locationlink-->',2)'
	}]

Info-No.4-lv2: file_symbol-->
	
	COMPOSITE:====================================================
	{}module_decl {}import_molule {}import_molule {}import_molule {}import_molule {}import_molule {}import_molule {}import_molule {}import_molule {}struct 
	{}struct {}struct {}fn {}fn {}method {}fn {}method {}method {}method {}method 
	()fn ()fn ()fn ()fn ()fn ()fn ()fn ()fn ()fn ()fn 
	()fn ()fn 
	
	

	['new_symboldb', 'set_module_lookup_paths', 'new_range']

	{'new_symboldb': sym.SymbolStr{
	    name: '{}fn'
	    typ: composite
	    start_index: 197
	    end_index: 278
	    text: 'fn new_symboldb(root_path string,vexe string)Symboldb{ 	os.setenv('VEXE', vexe, true) 	//初始化v pref 	mut args_and_flags := [root_path] 	v_env_args := util.join_env_vflags_and_os_args() 	for args_i := os.args.len;args_i<v_env_args.len;args_i++{ 		args_and_flags << v_env_args[args_i] 	}'
	}, 'set_module_lookup_paths': sym.SymbolStr{
	    name: '{}fn'
	    typ: composite
	    start_index: 350
	    end_index: 406
	    text: 'fn set_module_lookup_paths(mut vbuilder builder.Builder,prefs &pref.Preferences) { 	vbuilder.module_search_paths = [] 	if prefs.is_test { 		vbuilder.module_search_paths << os.dir(vbuilder.compiled_dir) // pdir of _test.v 	}'
	}, 'new_range': sym.SymbolStr{
	    name: '{}fn'
	    typ: composite
	    start_index: 2340
	    end_index: 2388
	    text: 'fn new_range(start_line int,start_character int,end_line int,end_character int)lsp.Range{ 	return lsp.Range{ 		start: lsp.Position{ 			line:start_line 			character:start_character 		}'
	}}

	[]

	{}

	[sym.SymbolStr{
	    name: '{}module_decl'
	    typ: composite
	    start_index: 0
	    end_index: 3
	    text: 'module server  '
	}, sym.SymbolStr{
	    name: '{}import_molule'
	    typ: composite
	    start_index: 4
	    end_index: 7
	    text: 'import sym '
	}, sym.SymbolStr{
	    name: '{}import_molule'
	    typ: composite
	    start_index: 8
	    end_index: 11
	    text: 'import os '
	}, sym.SymbolStr{
	    name: '{}import_molule'
	    typ: composite
	    start_index: 12
	    end_index: 17
	    text: 'import crypto.sha1 '
	}, sym.SymbolStr{
	    name: '{}import_molule'
	    typ: composite
	    start_index: 18
	    end_index: 21
	    text: 'import lsp '
	}, sym.SymbolStr{
	    name: '{}import_molule'
	    typ: composite
	    start_index: 22
	    end_index: 27
	    text: 'import lang.vlang  '
	}, sym.SymbolStr{
	    name: '{}import_molule'
	    typ: composite
	    start_index: 28
	    end_index: 33
	    text: 'import v.pref '
	}, sym.SymbolStr{
	    name: '{}import_molule'
	    typ: composite
	    start_index: 34
	    end_index: 39
	    text: 'import v.builder '
	}, sym.SymbolStr{
	    name: '{}import_molule'
	    typ: composite
	    start_index: 40
	    end_index: 45
	    text: 'import v.util  '
	}, sym.SymbolStr{
	    name: '{}struct'
	    typ: composite
	    start_index: 46
	    end_index: 80
	    text: 'struct Symboldb{ mut: 	file_symbol_cache map[string]&FileSymbol 	now_file string 	prefs &pref.Preferences 	vbuilder builder.Builder }'
	}, sym.SymbolStr{
	    name: '{}struct'
	    typ: composite
	    start_index: 82
	    end_index: 162
	    text: 'struct FileSymbol{ mut: 	//文件哈希值 	hexhash string 	context sym.Context 	runtime sym.Runtime 	//文件统计信息 	//文件的模块名 缺省时为main 	module_name string 	//所有引入的外部模块和全名 ex:import aa.bb.cc = cc:['aa','bb','cc'] 	import_module map[string][]string 	//其他模块引入的全局函数和结构体 ex:import aa.ff as tt{f1,f2} = f1:'tt',f2:'tt' 	all_other_module_global map[string]string 	//本文件包含的全部内部函数 	all_fn map[string]sym.Symbol 	//本文件包含的全部公共函数 	all_pub_fn map[string]sym.Symbol }'
	}, sym.SymbolStr{
	    name: '{}struct'
	    typ: composite
	    start_index: 164
	    end_index: 195
	    text: 'struct DfLocationLink{ 	is_found bool 	uri string 	target_range lsp.Range 	target_selection_range lsp.Range 	origin_selection_range lsp.Range }'
	}, sym.SymbolStr{
	    name: '{}fn'
	    typ: composite
	    start_index: 197
	    end_index: 278
	    text: 'fn new_symboldb(root_path string,vexe string)Symboldb{ 	os.setenv('VEXE', vexe, true) 	//初始化v pref 	mut args_and_flags := [root_path] 	v_env_args := util.join_env_vflags_and_os_args() 	for args_i := os.args.len;args_i<v_env_args.len;args_i++{ 		args_and_flags << v_env_args[args_i] 	}'
	}, sym.SymbolStr{
	    name: '{}fn'
	    typ: composite
	    start_index: 350
	    end_index: 406
	    text: 'fn set_module_lookup_paths(mut vbuilder builder.Builder,prefs &pref.Preferences) { 	vbuilder.module_search_paths = [] 	if prefs.is_test { 		vbuilder.module_search_paths << os.dir(vbuilder.compiled_dir) // pdir of _test.v 	}'
	}, sym.SymbolStr{
	    name: '{}method'
	    typ: composite
	    start_index: 448
	    end_index: 486
	    text: 'fn (mut symdb Symboldb) parse(mut ls Vls112,file_path string)?{  	if !os.is_file(file_path){ 		return 	}'
	}, sym.SymbolStr{
	    name: '{}fn'
	    typ: composite
	    start_index: 2340
	    end_index: 2388
	    text: 'fn new_range(start_line int,start_character int,end_line int,end_character int)lsp.Range{ 	return lsp.Range{ 		start: lsp.Position{ 			line:start_line 			character:start_character 		}'
	}, sym.SymbolStr{
	    name: '{}method'
	    typ: composite
	    start_index: 2413
	    end_index: 2461
	    text: 'fn (mut symdb Symboldb) search_df_locationlink(mut ls Vls112,line int,character int)?DfLocationLink{ 	if symdb.now_file == ''{ 		return error('No file to search symbol,please Execute the Symboldb.parse(file_path) first.') 	}'
	}, sym.SymbolStr{
	    name: '{}method'
	    typ: composite
	    start_index: 2928
	    end_index: 3040
	    text: 'fn (mut symdb Symboldb) find_own_module_df_locationlink(mut ls Vls112,fn_name string,fn_name_sym sym.Symbol)?DfLocationLink{ 	ls.logger.info('find_own_module_df_locationlink-->',2)? 	ls.logger.text(fn_name,2,'\t')?  	own_file_symbol := symdb.file_symbol_cache[symdb.now_file]  	//是否为外部引用的全局函数 	if fn_name in own_file_symbol.all_other_module_global{ 		module_name := own_file_symbol.all_other_module_global[fn_name] 		return symdb.find_other_module_df_locationlink(mut ls,fn_name,module_name,fn_name_sym) 	}'
	}, sym.SymbolStr{
	    name: '{}method'
	    typ: composite
	    start_index: 3815
	    end_index: 3875
	    text: 'fn (mut symdb Symboldb) get_own_modele_files()?[]string{ 	module_dir := os.dir(symdb.now_file) 	mut files := os.ls(module_dir)? 	return symdb.prefs.should_compile_filtered_files(module_dir, files) }'
	}, sym.SymbolStr{
	    name: '{}method'
	    typ: composite
	    start_index: 3877
	    end_index: 3934
	    text: 'fn (mut symdb Symboldb) find_other_module_df_locationlink(mut ls Vls112,fn_name string,module_name string,fn_name_sym sym.Symbol)?DfLocationLink{ 	 	ls.logger.info('find_other_module_df_locationlink-->',2)?  	return DfLocationLink{ 		is_found:false 	}'
	}, sym.SymbolStr{
	    name: '()fn'
	    typ: sub_composite
	    start_index: 212
	    end_index: 223
	    text: 'os.setenv('VEXE', vexe, true)'
	}, sym.SymbolStr{
	    name: '()fn'
	    typ: sub_composite
	    start_index: 241
	    end_index: 245
	    text: 'util.join_env_vflags_and_os_args()'
	}, sym.SymbolStr{
	    name: '()fn'
	    typ: sub_composite
	    start_index: 395
	    end_index: 402
	    text: 'os.dir(vbuilder.compiled_dir)'
	}, sym.SymbolStr{
	    name: '()fn'
	    typ: sub_composite
	    start_index: 476
	    end_index: 481
	    text: 'os.is_file(file_path)'
	}, sym.SymbolStr{
	    name: '()fn'
	    typ: sub_composite
	    start_index: 2456
	    end_index: 2459
	    text: 'error('No file to search symbol,please Execute the Symboldb.parse(file_path) first.')'
	}, sym.SymbolStr{
	    name: '()fn'
	    typ: sub_composite
	    start_index: 2960
	    end_index: 2969
	    text: 'ls.logger.info('find_own_module_df_locationlink-->',2)'
	}, sym.SymbolStr{
	    name: '()fn'
	    typ: sub_composite
	    start_index: 2972
	    end_index: 2983
	    text: 'ls.logger.text(fn_name,2,'\t')'
	}, sym.SymbolStr{
	    name: '()fn'
	    typ: sub_composite
	    start_index: 3025
	    end_index: 3038
	    text: 'symdb.find_other_module_df_locationlink(mut ls,fn_name,module_name,fn_name_sym)'
	}, sym.SymbolStr{
	    name: '()fn'
	    typ: sub_composite
	    start_index: 3838
	    end_index: 3845
	    text: 'os.dir(symdb.now_file)'
	}, sym.SymbolStr{
	    name: '()fn'
	    typ: sub_composite
	    start_index: 3853
	    end_index: 3858
	    text: 'os.ls(module_dir)'
	}, sym.SymbolStr{
	    name: '()fn'
	    typ: sub_composite
	    start_index: 3863
	    end_index: 3873
	    text: 'symdb.prefs.should_compile_filtered_files(module_dir, files)'
	}, sym.SymbolStr{
	    name: '()fn'
	    typ: sub_composite
	    start_index: 3913
	    end_index: 3922
	    text: 'ls.logger.info('find_other_module_df_locationlink-->',2)'
	}]

Info-No.5-lv2: file_symbol-->
	
	COMPOSITE:====================================================
	{}module_decl {}import_molule {}import_molule {}import_molule {}import_molule {}import_molule {}import_molule {}import_molule {}import_molule {}struct 
	{}struct {}struct {}fn {}fn {}method {}fn {}method {}method {}method {}method 
	()fn ()fn ()fn ()fn ()fn ()fn ()fn ()fn ()fn ()fn 
	()fn ()fn 
	
	

	['new_symboldb', 'set_module_lookup_paths', 'new_range']

	{'new_symboldb': sym.SymbolStr{
	    name: '{}fn'
	    typ: composite
	    start_index: 197
	    end_index: 278
	    text: 'fn new_symboldb(root_path string,vexe string)Symboldb{ 	os.setenv('VEXE', vexe, true) 	//初始化v pref 	mut args_and_flags := [root_path] 	v_env_args := util.join_env_vflags_and_os_args() 	for args_i := os.args.len;args_i<v_env_args.len;args_i++{ 		args_and_flags << v_env_args[args_i] 	}'
	}, 'set_module_lookup_paths': sym.SymbolStr{
	    name: '{}fn'
	    typ: composite
	    start_index: 350
	    end_index: 406
	    text: 'fn set_module_lookup_paths(mut vbuilder builder.Builder,prefs &pref.Preferences) { 	vbuilder.module_search_paths = [] 	if prefs.is_test { 		vbuilder.module_search_paths << os.dir(vbuilder.compiled_dir) // pdir of _test.v 	}'
	}, 'new_range': sym.SymbolStr{
	    name: '{}fn'
	    typ: composite
	    start_index: 2340
	    end_index: 2388
	    text: 'fn new_range(start_line int,start_character int,end_line int,end_character int)lsp.Range{ 	return lsp.Range{ 		start: lsp.Position{ 			line:start_line 			character:start_character 		}'
	}}

	[]

	{}

	[sym.SymbolStr{
	    name: '{}module_decl'
	    typ: composite
	    start_index: 0
	    end_index: 3
	    text: 'module server  '
	}, sym.SymbolStr{
	    name: '{}import_molule'
	    typ: composite
	    start_index: 4
	    end_index: 7
	    text: 'import sym '
	}, sym.SymbolStr{
	    name: '{}import_molule'
	    typ: composite
	    start_index: 8
	    end_index: 11
	    text: 'import os '
	}, sym.SymbolStr{
	    name: '{}import_molule'
	    typ: composite
	    start_index: 12
	    end_index: 17
	    text: 'import crypto.sha1 '
	}, sym.SymbolStr{
	    name: '{}import_molule'
	    typ: composite
	    start_index: 18
	    end_index: 21
	    text: 'import lsp '
	}, sym.SymbolStr{
	    name: '{}import_molule'
	    typ: composite
	    start_index: 22
	    end_index: 27
	    text: 'import lang.vlang  '
	}, sym.SymbolStr{
	    name: '{}import_molule'
	    typ: composite
	    start_index: 28
	    end_index: 33
	    text: 'import v.pref '
	}, sym.SymbolStr{
	    name: '{}import_molule'
	    typ: composite
	    start_index: 34
	    end_index: 39
	    text: 'import v.builder '
	}, sym.SymbolStr{
	    name: '{}import_molule'
	    typ: composite
	    start_index: 40
	    end_index: 45
	    text: 'import v.util  '
	}, sym.SymbolStr{
	    name: '{}struct'
	    typ: composite
	    start_index: 46
	    end_index: 80
	    text: 'struct Symboldb{ mut: 	file_symbol_cache map[string]&FileSymbol 	now_file string 	prefs &pref.Preferences 	vbuilder builder.Builder }'
	}, sym.SymbolStr{
	    name: '{}struct'
	    typ: composite
	    start_index: 82
	    end_index: 162
	    text: 'struct FileSymbol{ mut: 	//文件哈希值 	hexhash string 	context sym.Context 	runtime sym.Runtime 	//文件统计信息 	//文件的模块名 缺省时为main 	module_name string 	//所有引入的外部模块和全名 ex:import aa.bb.cc = cc:['aa','bb','cc'] 	import_module map[string][]string 	//其他模块引入的全局函数和结构体 ex:import aa.ff as tt{f1,f2} = f1:'tt',f2:'tt' 	all_other_module_global map[string]string 	//本文件包含的全部内部函数 	all_fn map[string]sym.Symbol 	//本文件包含的全部公共函数 	all_pub_fn map[string]sym.Symbol }'
	}, sym.SymbolStr{
	    name: '{}struct'
	    typ: composite
	    start_index: 164
	    end_index: 195
	    text: 'struct DfLocationLink{ 	is_found bool 	uri string 	target_range lsp.Range 	target_selection_range lsp.Range 	origin_selection_range lsp.Range }'
	}, sym.SymbolStr{
	    name: '{}fn'
	    typ: composite
	    start_index: 197
	    end_index: 278
	    text: 'fn new_symboldb(root_path string,vexe string)Symboldb{ 	os.setenv('VEXE', vexe, true) 	//初始化v pref 	mut args_and_flags := [root_path] 	v_env_args := util.join_env_vflags_and_os_args() 	for args_i := os.args.len;args_i<v_env_args.len;args_i++{ 		args_and_flags << v_env_args[args_i] 	}'
	}, sym.SymbolStr{
	    name: '{}fn'
	    typ: composite
	    start_index: 350
	    end_index: 406
	    text: 'fn set_module_lookup_paths(mut vbuilder builder.Builder,prefs &pref.Preferences) { 	vbuilder.module_search_paths = [] 	if prefs.is_test { 		vbuilder.module_search_paths << os.dir(vbuilder.compiled_dir) // pdir of _test.v 	}'
	}, sym.SymbolStr{
	    name: '{}method'
	    typ: composite
	    start_index: 448
	    end_index: 486
	    text: 'fn (mut symdb Symboldb) parse(mut ls Vls112,file_path string)?{  	if !os.is_file(file_path){ 		return 	}'
	}, sym.SymbolStr{
	    name: '{}fn'
	    typ: composite
	    start_index: 2340
	    end_index: 2388
	    text: 'fn new_range(start_line int,start_character int,end_line int,end_character int)lsp.Range{ 	return lsp.Range{ 		start: lsp.Position{ 			line:start_line 			character:start_character 		}'
	}, sym.SymbolStr{
	    name: '{}method'
	    typ: composite
	    start_index: 2413
	    end_index: 2461
	    text: 'fn (mut symdb Symboldb) search_df_locationlink(mut ls Vls112,line int,character int)?DfLocationLink{ 	if symdb.now_file == ''{ 		return error('No file to search symbol,please Execute the Symboldb.parse(file_path) first.') 	}'
	}, sym.SymbolStr{
	    name: '{}method'
	    typ: composite
	    start_index: 2928
	    end_index: 3040
	    text: 'fn (mut symdb Symboldb) find_own_module_df_locationlink(mut ls Vls112,fn_name string,fn_name_sym sym.Symbol)?DfLocationLink{ 	ls.logger.info('find_own_module_df_locationlink-->',2)? 	ls.logger.text(fn_name,2,'\t')?  	own_file_symbol := symdb.file_symbol_cache[symdb.now_file]  	//是否为外部引用的全局函数 	if fn_name in own_file_symbol.all_other_module_global{ 		module_name := own_file_symbol.all_other_module_global[fn_name] 		return symdb.find_other_module_df_locationlink(mut ls,fn_name,module_name,fn_name_sym) 	}'
	}, sym.SymbolStr{
	    name: '{}method'
	    typ: composite
	    start_index: 3815
	    end_index: 3875
	    text: 'fn (mut symdb Symboldb) get_own_modele_files()?[]string{ 	module_dir := os.dir(symdb.now_file) 	mut files := os.ls(module_dir)? 	return symdb.prefs.should_compile_filtered_files(module_dir, files) }'
	}, sym.SymbolStr{
	    name: '{}method'
	    typ: composite
	    start_index: 3877
	    end_index: 3934
	    text: 'fn (mut symdb Symboldb) find_other_module_df_locationlink(mut ls Vls112,fn_name string,module_name string,fn_name_sym sym.Symbol)?DfLocationLink{ 	 	ls.logger.info('find_other_module_df_locationlink-->',2)?  	return DfLocationLink{ 		is_found:false 	}'
	}, sym.SymbolStr{
	    name: '()fn'
	    typ: sub_composite
	    start_index: 212
	    end_index: 223
	    text: 'os.setenv('VEXE', vexe, true)'
	}, sym.SymbolStr{
	    name: '()fn'
	    typ: sub_composite
	    start_index: 241
	    end_index: 245
	    text: 'util.join_env_vflags_and_os_args()'
	}, sym.SymbolStr{
	    name: '()fn'
	    typ: sub_composite
	    start_index: 395
	    end_index: 402
	    text: 'os.dir(vbuilder.compiled_dir)'
	}, sym.SymbolStr{
	    name: '()fn'
	    typ: sub_composite
	    start_index: 476
	    end_index: 481
	    text: 'os.is_file(file_path)'
	}, sym.SymbolStr{
	    name: '()fn'
	    typ: sub_composite
	    start_index: 2456
	    end_index: 2459
	    text: 'error('No file to search symbol,please Execute the Symboldb.parse(file_path) first.')'
	}, sym.SymbolStr{
	    name: '()fn'
	    typ: sub_composite
	    start_index: 2960
	    end_index: 2969
	    text: 'ls.logger.info('find_own_module_df_locationlink-->',2)'
	}, sym.SymbolStr{
	    name: '()fn'
	    typ: sub_composite
	    start_index: 2972
	    end_index: 2983
	    text: 'ls.logger.text(fn_name,2,'\t')'
	}, sym.SymbolStr{
	    name: '()fn'
	    typ: sub_composite
	    start_index: 3025
	    end_index: 3038
	    text: 'symdb.find_other_module_df_locationlink(mut ls,fn_name,module_name,fn_name_sym)'
	}, sym.SymbolStr{
	    name: '()fn'
	    typ: sub_composite
	    start_index: 3838
	    end_index: 3845
	    text: 'os.dir(symdb.now_file)'
	}, sym.SymbolStr{
	    name: '()fn'
	    typ: sub_composite
	    start_index: 3853
	    end_index: 3858
	    text: 'os.ls(module_dir)'
	}, sym.SymbolStr{
	    name: '()fn'
	    typ: sub_composite
	    start_index: 3863
	    end_index: 3873
	    text: 'symdb.prefs.should_compile_filtered_files(module_dir, files)'
	}, sym.SymbolStr{
	    name: '()fn'
	    typ: sub_composite
	    start_index: 3913
	    end_index: 3922
	    text: 'ls.logger.info('find_other_module_df_locationlink-->',2)'
	}]

Info-No.6-lv2: file_symbol-->
	
	COMPOSITE:====================================================
	{}module_decl {}import_molule {}import_molule {}import_molule {}import_molule {}import_molule {}import_molule {}import_molule {}import_molule {}struct 
	{}struct {}struct {}fn {}fn {}method {}fn {}method {}method {}method {}method 
	()fn ()fn ()fn ()fn ()fn ()fn ()fn ()fn ()fn ()fn 
	()fn ()fn 
	
	

	['new_symboldb', 'set_module_lookup_paths', 'new_range']

	{'new_symboldb': sym.SymbolStr{
	    name: '{}fn'
	    typ: composite
	    start_index: 197
	    end_index: 278
	    text: 'fn new_symboldb(root_path string,vexe string)Symboldb{ 	os.setenv('VEXE', vexe, true) 	//初始化v pref 	mut args_and_flags := [root_path] 	v_env_args := util.join_env_vflags_and_os_args() 	for args_i := os.args.len;args_i<v_env_args.len;args_i++{ 		args_and_flags << v_env_args[args_i] 	}'
	}, 'set_module_lookup_paths': sym.SymbolStr{
	    name: '{}fn'
	    typ: composite
	    start_index: 350
	    end_index: 406
	    text: 'fn set_module_lookup_paths(mut vbuilder builder.Builder,prefs &pref.Preferences) { 	vbuilder.module_search_paths = [] 	if prefs.is_test { 		vbuilder.module_search_paths << os.dir(vbuilder.compiled_dir) // pdir of _test.v 	}'
	}, 'new_range': sym.SymbolStr{
	    name: '{}fn'
	    typ: composite
	    start_index: 2340
	    end_index: 2388
	    text: 'fn new_range(start_line int,start_character int,end_line int,end_character int)lsp.Range{ 	return lsp.Range{ 		start: lsp.Position{ 			line:start_line 			character:start_character 		}'
	}}

	[]

	{}

	[sym.SymbolStr{
	    name: '{}module_decl'
	    typ: composite
	    start_index: 0
	    end_index: 3
	    text: 'module server  '
	}, sym.SymbolStr{
	    name: '{}import_molule'
	    typ: composite
	    start_index: 4
	    end_index: 7
	    text: 'import sym '
	}, sym.SymbolStr{
	    name: '{}import_molule'
	    typ: composite
	    start_index: 8
	    end_index: 11
	    text: 'import os '
	}, sym.SymbolStr{
	    name: '{}import_molule'
	    typ: composite
	    start_index: 12
	    end_index: 17
	    text: 'import crypto.sha1 '
	}, sym.SymbolStr{
	    name: '{}import_molule'
	    typ: composite
	    start_index: 18
	    end_index: 21
	    text: 'import lsp '
	}, sym.SymbolStr{
	    name: '{}import_molule'
	    typ: composite
	    start_index: 22
	    end_index: 27
	    text: 'import lang.vlang  '
	}, sym.SymbolStr{
	    name: '{}import_molule'
	    typ: composite
	    start_index: 28
	    end_index: 33
	    text: 'import v.pref '
	}, sym.SymbolStr{
	    name: '{}import_molule'
	    typ: composite
	    start_index: 34
	    end_index: 39
	    text: 'import v.builder '
	}, sym.SymbolStr{
	    name: '{}import_molule'
	    typ: composite
	    start_index: 40
	    end_index: 45
	    text: 'import v.util  '
	}, sym.SymbolStr{
	    name: '{}struct'
	    typ: composite
	    start_index: 46
	    end_index: 80
	    text: 'struct Symboldb{ mut: 	file_symbol_cache map[string]&FileSymbol 	now_file string 	prefs &pref.Preferences 	vbuilder builder.Builder }'
	}, sym.SymbolStr{
	    name: '{}struct'
	    typ: composite
	    start_index: 82
	    end_index: 162
	    text: 'struct FileSymbol{ mut: 	//文件哈希值 	hexhash string 	context sym.Context 	runtime sym.Runtime 	//文件统计信息 	//文件的模块名 缺省时为main 	module_name string 	//所有引入的外部模块和全名 ex:import aa.bb.cc = cc:['aa','bb','cc'] 	import_module map[string][]string 	//其他模块引入的全局函数和结构体 ex:import aa.ff as tt{f1,f2} = f1:'tt',f2:'tt' 	all_other_module_global map[string]string 	//本文件包含的全部内部函数 	all_fn map[string]sym.Symbol 	//本文件包含的全部公共函数 	all_pub_fn map[string]sym.Symbol }'
	}, sym.SymbolStr{
	    name: '{}struct'
	    typ: composite
	    start_index: 164
	    end_index: 195
	    text: 'struct DfLocationLink{ 	is_found bool 	uri string 	target_range lsp.Range 	target_selection_range lsp.Range 	origin_selection_range lsp.Range }'
	}, sym.SymbolStr{
	    name: '{}fn'
	    typ: composite
	    start_index: 197
	    end_index: 278
	    text: 'fn new_symboldb(root_path string,vexe string)Symboldb{ 	os.setenv('VEXE', vexe, true) 	//初始化v pref 	mut args_and_flags := [root_path] 	v_env_args := util.join_env_vflags_and_os_args() 	for args_i := os.args.len;args_i<v_env_args.len;args_i++{ 		args_and_flags << v_env_args[args_i] 	}'
	}, sym.SymbolStr{
	    name: '{}fn'
	    typ: composite
	    start_index: 350
	    end_index: 406
	    text: 'fn set_module_lookup_paths(mut vbuilder builder.Builder,prefs &pref.Preferences) { 	vbuilder.module_search_paths = [] 	if prefs.is_test { 		vbuilder.module_search_paths << os.dir(vbuilder.compiled_dir) // pdir of _test.v 	}'
	}, sym.SymbolStr{
	    name: '{}method'
	    typ: composite
	    start_index: 448
	    end_index: 486
	    text: 'fn (mut symdb Symboldb) parse(mut ls Vls112,file_path string)?{  	if !os.is_file(file_path){ 		return 	}'
	}, sym.SymbolStr{
	    name: '{}fn'
	    typ: composite
	    start_index: 2340
	    end_index: 2388
	    text: 'fn new_range(start_line int,start_character int,end_line int,end_character int)lsp.Range{ 	return lsp.Range{ 		start: lsp.Position{ 			line:start_line 			character:start_character 		}'
	}, sym.SymbolStr{
	    name: '{}method'
	    typ: composite
	    start_index: 2413
	    end_index: 2461
	    text: 'fn (mut symdb Symboldb) search_df_locationlink(mut ls Vls112,line int,character int)?DfLocationLink{ 	if symdb.now_file == ''{ 		return error('No file to search symbol,please Execute the Symboldb.parse(file_path) first.') 	}'
	}, sym.SymbolStr{
	    name: '{}method'
	    typ: composite
	    start_index: 2928
	    end_index: 3040
	    text: 'fn (mut symdb Symboldb) find_own_module_df_locationlink(mut ls Vls112,fn_name string,fn_name_sym sym.Symbol)?DfLocationLink{ 	ls.logger.info('find_own_module_df_locationlink-->',2)? 	ls.logger.text(fn_name,2,'\t')?  	own_file_symbol := symdb.file_symbol_cache[symdb.now_file]  	//是否为外部引用的全局函数 	if fn_name in own_file_symbol.all_other_module_global{ 		module_name := own_file_symbol.all_other_module_global[fn_name] 		return symdb.find_other_module_df_locationlink(mut ls,fn_name,module_name,fn_name_sym) 	}'
	}, sym.SymbolStr{
	    name: '{}method'
	    typ: composite
	    start_index: 3815
	    end_index: 3875
	    text: 'fn (mut symdb Symboldb) get_own_modele_files()?[]string{ 	module_dir := os.dir(symdb.now_file) 	mut files := os.ls(module_dir)? 	return symdb.prefs.should_compile_filtered_files(module_dir, files) }'
	}, sym.SymbolStr{
	    name: '{}method'
	    typ: composite
	    start_index: 3877
	    end_index: 3934
	    text: 'fn (mut symdb Symboldb) find_other_module_df_locationlink(mut ls Vls112,fn_name string,module_name string,fn_name_sym sym.Symbol)?DfLocationLink{ 	 	ls.logger.info('find_other_module_df_locationlink-->',2)?  	return DfLocationLink{ 		is_found:false 	}'
	}, sym.SymbolStr{
	    name: '()fn'
	    typ: sub_composite
	    start_index: 212
	    end_index: 223
	    text: 'os.setenv('VEXE', vexe, true)'
	}, sym.SymbolStr{
	    name: '()fn'
	    typ: sub_composite
	    start_index: 241
	    end_index: 245
	    text: 'util.join_env_vflags_and_os_args()'
	}, sym.SymbolStr{
	    name: '()fn'
	    typ: sub_composite
	    start_index: 395
	    end_index: 402
	    text: 'os.dir(vbuilder.compiled_dir)'
	}, sym.SymbolStr{
	    name: '()fn'
	    typ: sub_composite
	    start_index: 476
	    end_index: 481
	    text: 'os.is_file(file_path)'
	}, sym.SymbolStr{
	    name: '()fn'
	    typ: sub_composite
	    start_index: 2456
	    end_index: 2459
	    text: 'error('No file to search symbol,please Execute the Symboldb.parse(file_path) first.')'
	}, sym.SymbolStr{
	    name: '()fn'
	    typ: sub_composite
	    start_index: 2960
	    end_index: 2969
	    text: 'ls.logger.info('find_own_module_df_locationlink-->',2)'
	}, sym.SymbolStr{
	    name: '()fn'
	    typ: sub_composite
	    start_index: 2972
	    end_index: 2983
	    text: 'ls.logger.text(fn_name,2,'\t')'
	}, sym.SymbolStr{
	    name: '()fn'
	    typ: sub_composite
	    start_index: 3025
	    end_index: 3038
	    text: 'symdb.find_other_module_df_locationlink(mut ls,fn_name,module_name,fn_name_sym)'
	}, sym.SymbolStr{
	    name: '()fn'
	    typ: sub_composite
	    start_index: 3838
	    end_index: 3845
	    text: 'os.dir(symdb.now_file)'
	}, sym.SymbolStr{
	    name: '()fn'
	    typ: sub_composite
	    start_index: 3853
	    end_index: 3858
	    text: 'os.ls(module_dir)'
	}, sym.SymbolStr{
	    name: '()fn'
	    typ: sub_composite
	    start_index: 3863
	    end_index: 3873
	    text: 'symdb.prefs.should_compile_filtered_files(module_dir, files)'
	}, sym.SymbolStr{
	    name: '()fn'
	    typ: sub_composite
	    start_index: 3913
	    end_index: 3922
	    text: 'ls.logger.info('find_other_module_df_locationlink-->',2)'
	}]

Info-No.7-lv2: file_symbol-->
	
	COMPOSITE:====================================================
	{}module_decl {}import_molule {}import_molule {}import_molule {}import_molule {}import_molule {}import_molule {}import_molule {}import_molule {}struct 
	{}struct {}struct {}fn {}fn {}method {}fn {}method {}method {}method {}method 
	()fn ()fn ()fn ()fn ()fn ()fn ()fn ()fn ()fn ()fn 
	()fn ()fn 
	
	

	['new_symboldb', 'set_module_lookup_paths', 'new_range']

	{'new_symboldb': sym.SymbolStr{
	    name: '{}fn'
	    typ: composite
	    start_index: 197
	    end_index: 278
	    text: 'fn new_symboldb(root_path string,vexe string)Symboldb{ 	os.setenv('VEXE', vexe, true) 	//初始化v pref 	mut args_and_flags := [root_path] 	v_env_args := util.join_env_vflags_and_os_args() 	for args_i := os.args.len;args_i<v_env_args.len;args_i++{ 		args_and_flags << v_env_args[args_i] 	}'
	}, 'set_module_lookup_paths': sym.SymbolStr{
	    name: '{}fn'
	    typ: composite
	    start_index: 350
	    end_index: 406
	    text: 'fn set_module_lookup_paths(mut vbuilder builder.Builder,prefs &pref.Preferences) { 	vbuilder.module_search_paths = [] 	if prefs.is_test { 		vbuilder.module_search_paths << os.dir(vbuilder.compiled_dir) // pdir of _test.v 	}'
	}, 'new_range': sym.SymbolStr{
	    name: '{}fn'
	    typ: composite
	    start_index: 2340
	    end_index: 2388
	    text: 'fn new_range(start_line int,start_character int,end_line int,end_character int)lsp.Range{ 	return lsp.Range{ 		start: lsp.Position{ 			line:start_line 			character:start_character 		}'
	}}

	[]

	{}

	[sym.SymbolStr{
	    name: '{}module_decl'
	    typ: composite
	    start_index: 0
	    end_index: 3
	    text: 'module server  '
	}, sym.SymbolStr{
	    name: '{}import_molule'
	    typ: composite
	    start_index: 4
	    end_index: 7
	    text: 'import sym '
	}, sym.SymbolStr{
	    name: '{}import_molule'
	    typ: composite
	    start_index: 8
	    end_index: 11
	    text: 'import os '
	}, sym.SymbolStr{
	    name: '{}import_molule'
	    typ: composite
	    start_index: 12
	    end_index: 17
	    text: 'import crypto.sha1 '
	}, sym.SymbolStr{
	    name: '{}import_molule'
	    typ: composite
	    start_index: 18
	    end_index: 21
	    text: 'import lsp '
	}, sym.SymbolStr{
	    name: '{}import_molule'
	    typ: composite
	    start_index: 22
	    end_index: 27
	    text: 'import lang.vlang  '
	}, sym.SymbolStr{
	    name: '{}import_molule'
	    typ: composite
	    start_index: 28
	    end_index: 33
	    text: 'import v.pref '
	}, sym.SymbolStr{
	    name: '{}import_molule'
	    typ: composite
	    start_index: 34
	    end_index: 39
	    text: 'import v.builder '
	}, sym.SymbolStr{
	    name: '{}import_molule'
	    typ: composite
	    start_index: 40
	    end_index: 45
	    text: 'import v.util  '
	}, sym.SymbolStr{
	    name: '{}struct'
	    typ: composite
	    start_index: 46
	    end_index: 80
	    text: 'struct Symboldb{ mut: 	file_symbol_cache map[string]&FileSymbol 	now_file string 	prefs &pref.Preferences 	vbuilder builder.Builder }'
	}, sym.SymbolStr{
	    name: '{}struct'
	    typ: composite
	    start_index: 82
	    end_index: 162
	    text: 'struct FileSymbol{ mut: 	//文件哈希值 	hexhash string 	context sym.Context 	runtime sym.Runtime 	//文件统计信息 	//文件的模块名 缺省时为main 	module_name string 	//所有引入的外部模块和全名 ex:import aa.bb.cc = cc:['aa','bb','cc'] 	import_module map[string][]string 	//其他模块引入的全局函数和结构体 ex:import aa.ff as tt{f1,f2} = f1:'tt',f2:'tt' 	all_other_module_global map[string]string 	//本文件包含的全部内部函数 	all_fn map[string]sym.Symbol 	//本文件包含的全部公共函数 	all_pub_fn map[string]sym.Symbol }'
	}, sym.SymbolStr{
	    name: '{}struct'
	    typ: composite
	    start_index: 164
	    end_index: 195
	    text: 'struct DfLocationLink{ 	is_found bool 	uri string 	target_range lsp.Range 	target_selection_range lsp.Range 	origin_selection_range lsp.Range }'
	}, sym.SymbolStr{
	    name: '{}fn'
	    typ: composite
	    start_index: 197
	    end_index: 278
	    text: 'fn new_symboldb(root_path string,vexe string)Symboldb{ 	os.setenv('VEXE', vexe, true) 	//初始化v pref 	mut args_and_flags := [root_path] 	v_env_args := util.join_env_vflags_and_os_args() 	for args_i := os.args.len;args_i<v_env_args.len;args_i++{ 		args_and_flags << v_env_args[args_i] 	}'
	}, sym.SymbolStr{
	    name: '{}fn'
	    typ: composite
	    start_index: 350
	    end_index: 406
	    text: 'fn set_module_lookup_paths(mut vbuilder builder.Builder,prefs &pref.Preferences) { 	vbuilder.module_search_paths = [] 	if prefs.is_test { 		vbuilder.module_search_paths << os.dir(vbuilder.compiled_dir) // pdir of _test.v 	}'
	}, sym.SymbolStr{
	    name: '{}method'
	    typ: composite
	    start_index: 448
	    end_index: 486
	    text: 'fn (mut symdb Symboldb) parse(mut ls Vls112,file_path string)?{  	if !os.is_file(file_path){ 		return 	}'
	}, sym.SymbolStr{
	    name: '{}fn'
	    typ: composite
	    start_index: 2340
	    end_index: 2388
	    text: 'fn new_range(start_line int,start_character int,end_line int,end_character int)lsp.Range{ 	return lsp.Range{ 		start: lsp.Position{ 			line:start_line 			character:start_character 		}'
	}, sym.SymbolStr{
	    name: '{}method'
	    typ: composite
	    start_index: 2413
	    end_index: 2461
	    text: 'fn (mut symdb Symboldb) search_df_locationlink(mut ls Vls112,line int,character int)?DfLocationLink{ 	if symdb.now_file == ''{ 		return error('No file to search symbol,please Execute the Symboldb.parse(file_path) first.') 	}'
	}, sym.SymbolStr{
	    name: '{}method'
	    typ: composite
	    start_index: 2928
	    end_index: 3040
	    text: 'fn (mut symdb Symboldb) find_own_module_df_locationlink(mut ls Vls112,fn_name string,fn_name_sym sym.Symbol)?DfLocationLink{ 	ls.logger.info('find_own_module_df_locationlink-->',2)? 	ls.logger.text(fn_name,2,'\t')?  	own_file_symbol := symdb.file_symbol_cache[symdb.now_file]  	//是否为外部引用的全局函数 	if fn_name in own_file_symbol.all_other_module_global{ 		module_name := own_file_symbol.all_other_module_global[fn_name] 		return symdb.find_other_module_df_locationlink(mut ls,fn_name,module_name,fn_name_sym) 	}'
	}, sym.SymbolStr{
	    name: '{}method'
	    typ: composite
	    start_index: 3819
	    end_index: 3879
	    text: 'fn (mut symdb Symboldb) get_own_modele_files()?[]string{ 	module_dir := os.dir(symdb.now_file) 	mut files := os.ls(module_dir)? 	return symdb.prefs.should_compile_filtered_files(module_dir, files) }'
	}, sym.SymbolStr{
	    name: '{}method'
	    typ: composite
	    start_index: 3881
	    end_index: 3938
	    text: 'fn (mut symdb Symboldb) find_other_module_df_locationlink(mut ls Vls112,fn_name string,module_name string,fn_name_sym sym.Symbol)?DfLocationLink{ 	 	ls.logger.info('find_other_module_df_locationlink-->',2)?  	return DfLocationLink{ 		is_found:false 	}'
	}, sym.SymbolStr{
	    name: '()fn'
	    typ: sub_composite
	    start_index: 212
	    end_index: 223
	    text: 'os.setenv('VEXE', vexe, true)'
	}, sym.SymbolStr{
	    name: '()fn'
	    typ: sub_composite
	    start_index: 241
	    end_index: 245
	    text: 'util.join_env_vflags_and_os_args()'
	}, sym.SymbolStr{
	    name: '()fn'
	    typ: sub_composite
	    start_index: 395
	    end_index: 402
	    text: 'os.dir(vbuilder.compiled_dir)'
	}, sym.SymbolStr{
	    name: '()fn'
	    typ: sub_composite
	    start_index: 476
	    end_index: 481
	    text: 'os.is_file(file_path)'
	}, sym.SymbolStr{
	    name: '()fn'
	    typ: sub_composite
	    start_index: 2456
	    end_index: 2459
	    text: 'error('No file to search symbol,please Execute the Symboldb.parse(file_path) first.')'
	}, sym.SymbolStr{
	    name: '()fn'
	    typ: sub_composite
	    start_index: 2960
	    end_index: 2969
	    text: 'ls.logger.info('find_own_module_df_locationlink-->',2)'
	}, sym.SymbolStr{
	    name: '()fn'
	    typ: sub_composite
	    start_index: 2972
	    end_index: 2983
	    text: 'ls.logger.text(fn_name,2,'\t')'
	}, sym.SymbolStr{
	    name: '()fn'
	    typ: sub_composite
	    start_index: 3025
	    end_index: 3038
	    text: 'symdb.find_other_module_df_locationlink(mut ls,fn_name,module_name,fn_name_sym)'
	}, sym.SymbolStr{
	    name: '()fn'
	    typ: sub_composite
	    start_index: 3842
	    end_index: 3849
	    text: 'os.dir(symdb.now_file)'
	}, sym.SymbolStr{
	    name: '()fn'
	    typ: sub_composite
	    start_index: 3857
	    end_index: 3862
	    text: 'os.ls(module_dir)'
	}, sym.SymbolStr{
	    name: '()fn'
	    typ: sub_composite
	    start_index: 3867
	    end_index: 3877
	    text: 'symdb.prefs.should_compile_filtered_files(module_dir, files)'
	}, sym.SymbolStr{
	    name: '()fn'
	    typ: sub_composite
	    start_index: 3917
	    end_index: 3926
	    text: 'ls.logger.info('find_other_module_df_locationlink-->',2)'
	}]

Info-No.8-lv2: file_symbol-->
	
	COMPOSITE:====================================================
	{}module_decl {}import_molule {}import_molule {}import_molule {}import_molule {}import_molule {}import_molule {}import_molule {}import_molule {}struct 
	{}struct {}struct {}fn {}fn {}method {}fn {}method {}method {}method {}method 
	()fn ()fn ()fn ()fn ()fn ()fn ()fn ()fn ()fn ()fn 
	()fn ()fn 
	
	

	['new_symboldb', 'set_module_lookup_paths', 'new_range']

	{'new_symboldb': sym.SymbolStr{
	    name: '{}fn'
	    typ: composite
	    start_index: 197
	    end_index: 278
	    text: 'fn new_symboldb(root_path string,vexe string)Symboldb{ 	os.setenv('VEXE', vexe, true) 	//初始化v pref 	mut args_and_flags := [root_path] 	v_env_args := util.join_env_vflags_and_os_args() 	for args_i := os.args.len;args_i<v_env_args.len;args_i++{ 		args_and_flags << v_env_args[args_i] 	}'
	}, 'set_module_lookup_paths': sym.SymbolStr{
	    name: '{}fn'
	    typ: composite
	    start_index: 350
	    end_index: 406
	    text: 'fn set_module_lookup_paths(mut vbuilder builder.Builder,prefs &pref.Preferences) { 	vbuilder.module_search_paths = [] 	if prefs.is_test { 		vbuilder.module_search_paths << os.dir(vbuilder.compiled_dir) // pdir of _test.v 	}'
	}, 'new_range': sym.SymbolStr{
	    name: '{}fn'
	    typ: composite
	    start_index: 2340
	    end_index: 2388
	    text: 'fn new_range(start_line int,start_character int,end_line int,end_character int)lsp.Range{ 	return lsp.Range{ 		start: lsp.Position{ 			line:start_line 			character:start_character 		}'
	}}

	[]

	{}

	[sym.SymbolStr{
	    name: '{}module_decl'
	    typ: composite
	    start_index: 0
	    end_index: 3
	    text: 'module server  '
	}, sym.SymbolStr{
	    name: '{}import_molule'
	    typ: composite
	    start_index: 4
	    end_index: 7
	    text: 'import sym '
	}, sym.SymbolStr{
	    name: '{}import_molule'
	    typ: composite
	    start_index: 8
	    end_index: 11
	    text: 'import os '
	}, sym.SymbolStr{
	    name: '{}import_molule'
	    typ: composite
	    start_index: 12
	    end_index: 17
	    text: 'import crypto.sha1 '
	}, sym.SymbolStr{
	    name: '{}import_molule'
	    typ: composite
	    start_index: 18
	    end_index: 21
	    text: 'import lsp '
	}, sym.SymbolStr{
	    name: '{}import_molule'
	    typ: composite
	    start_index: 22
	    end_index: 27
	    text: 'import lang.vlang  '
	}, sym.SymbolStr{
	    name: '{}import_molule'
	    typ: composite
	    start_index: 28
	    end_index: 33
	    text: 'import v.pref '
	}, sym.SymbolStr{
	    name: '{}import_molule'
	    typ: composite
	    start_index: 34
	    end_index: 39
	    text: 'import v.builder '
	}, sym.SymbolStr{
	    name: '{}import_molule'
	    typ: composite
	    start_index: 40
	    end_index: 45
	    text: 'import v.util  '
	}, sym.SymbolStr{
	    name: '{}struct'
	    typ: composite
	    start_index: 46
	    end_index: 80
	    text: 'struct Symboldb{ mut: 	file_symbol_cache map[string]&FileSymbol 	now_file string 	prefs &pref.Preferences 	vbuilder builder.Builder }'
	}, sym.SymbolStr{
	    name: '{}struct'
	    typ: composite
	    start_index: 82
	    end_index: 162
	    text: 'struct FileSymbol{ mut: 	//文件哈希值 	hexhash string 	context sym.Context 	runtime sym.Runtime 	//文件统计信息 	//文件的模块名 缺省时为main 	module_name string 	//所有引入的外部模块和全名 ex:import aa.bb.cc = cc:['aa','bb','cc'] 	import_module map[string][]string 	//其他模块引入的全局函数和结构体 ex:import aa.ff as tt{f1,f2} = f1:'tt',f2:'tt' 	all_other_module_global map[string]string 	//本文件包含的全部内部函数 	all_fn map[string]sym.Symbol 	//本文件包含的全部公共函数 	all_pub_fn map[string]sym.Symbol }'
	}, sym.SymbolStr{
	    name: '{}struct'
	    typ: composite
	    start_index: 164
	    end_index: 195
	    text: 'struct DfLocationLink{ 	is_found bool 	uri string 	target_range lsp.Range 	target_selection_range lsp.Range 	origin_selection_range lsp.Range }'
	}, sym.SymbolStr{
	    name: '{}fn'
	    typ: composite
	    start_index: 197
	    end_index: 278
	    text: 'fn new_symboldb(root_path string,vexe string)Symboldb{ 	os.setenv('VEXE', vexe, true) 	//初始化v pref 	mut args_and_flags := [root_path] 	v_env_args := util.join_env_vflags_and_os_args() 	for args_i := os.args.len;args_i<v_env_args.len;args_i++{ 		args_and_flags << v_env_args[args_i] 	}'
	}, sym.SymbolStr{
	    name: '{}fn'
	    typ: composite
	    start_index: 350
	    end_index: 406
	    text: 'fn set_module_lookup_paths(mut vbuilder builder.Builder,prefs &pref.Preferences) { 	vbuilder.module_search_paths = [] 	if prefs.is_test { 		vbuilder.module_search_paths << os.dir(vbuilder.compiled_dir) // pdir of _test.v 	}'
	}, sym.SymbolStr{
	    name: '{}method'
	    typ: composite
	    start_index: 448
	    end_index: 486
	    text: 'fn (mut symdb Symboldb) parse(mut ls Vls112,file_path string)?{  	if !os.is_file(file_path){ 		return 	}'
	}, sym.SymbolStr{
	    name: '{}fn'
	    typ: composite
	    start_index: 2340
	    end_index: 2388
	    text: 'fn new_range(start_line int,start_character int,end_line int,end_character int)lsp.Range{ 	return lsp.Range{ 		start: lsp.Position{ 			line:start_line 			character:start_character 		}'
	}, sym.SymbolStr{
	    name: '{}method'
	    typ: composite
	    start_index: 2413
	    end_index: 2461
	    text: 'fn (mut symdb Symboldb) search_df_locationlink(mut ls Vls112,line int,character int)?DfLocationLink{ 	if symdb.now_file == ''{ 		return error('No file to search symbol,please Execute the Symboldb.parse(file_path) first.') 	}'
	}, sym.SymbolStr{
	    name: '{}method'
	    typ: composite
	    start_index: 2928
	    end_index: 3040
	    text: 'fn (mut symdb Symboldb) find_own_module_df_locationlink(mut ls Vls112,fn_name string,fn_name_sym sym.Symbol)?DfLocationLink{ 	ls.logger.info('find_own_module_df_locationlink-->',2)? 	ls.logger.text(fn_name,2,'\t')?  	own_file_symbol := symdb.file_symbol_cache[symdb.now_file]  	//是否为外部引用的全局函数 	if fn_name in own_file_symbol.all_other_module_global{ 		module_name := own_file_symbol.all_other_module_global[fn_name] 		return symdb.find_other_module_df_locationlink(mut ls,fn_name,module_name,fn_name_sym) 	}'
	}, sym.SymbolStr{
	    name: '{}method'
	    typ: composite
	    start_index: 3819
	    end_index: 3879
	    text: 'fn (mut symdb Symboldb) get_own_modele_files()?[]string{ 	module_dir := os.dir(symdb.now_file) 	mut files := os.ls(module_dir)? 	return symdb.prefs.should_compile_filtered_files(module_dir, files) }'
	}, sym.SymbolStr{
	    name: '{}method'
	    typ: composite
	    start_index: 3881
	    end_index: 3938
	    text: 'fn (mut symdb Symboldb) find_other_module_df_locationlink(mut ls Vls112,fn_name string,module_name string,fn_name_sym sym.Symbol)?DfLocationLink{ 	 	ls.logger.info('find_other_module_df_locationlink-->',2)?  	return DfLocationLink{ 		is_found:false 	}'
	}, sym.SymbolStr{
	    name: '()fn'
	    typ: sub_composite
	    start_index: 212
	    end_index: 223
	    text: 'os.setenv('VEXE', vexe, true)'
	}, sym.SymbolStr{
	    name: '()fn'
	    typ: sub_composite
	    start_index: 241
	    end_index: 245
	    text: 'util.join_env_vflags_and_os_args()'
	}, sym.SymbolStr{
	    name: '()fn'
	    typ: sub_composite
	    start_index: 395
	    end_index: 402
	    text: 'os.dir(vbuilder.compiled_dir)'
	}, sym.SymbolStr{
	    name: '()fn'
	    typ: sub_composite
	    start_index: 476
	    end_index: 481
	    text: 'os.is_file(file_path)'
	}, sym.SymbolStr{
	    name: '()fn'
	    typ: sub_composite
	    start_index: 2456
	    end_index: 2459
	    text: 'error('No file to search symbol,please Execute the Symboldb.parse(file_path) first.')'
	}, sym.SymbolStr{
	    name: '()fn'
	    typ: sub_composite
	    start_index: 2960
	    end_index: 2969
	    text: 'ls.logger.info('find_own_module_df_locationlink-->',2)'
	}, sym.SymbolStr{
	    name: '()fn'
	    typ: sub_composite
	    start_index: 2972
	    end_index: 2983
	    text: 'ls.logger.text(fn_name,2,'\t')'
	}, sym.SymbolStr{
	    name: '()fn'
	    typ: sub_composite
	    start_index: 3025
	    end_index: 3038
	    text: 'symdb.find_other_module_df_locationlink(mut ls,fn_name,module_name,fn_name_sym)'
	}, sym.SymbolStr{
	    name: '()fn'
	    typ: sub_composite
	    start_index: 3842
	    end_index: 3849
	    text: 'os.dir(symdb.now_file)'
	}, sym.SymbolStr{
	    name: '()fn'
	    typ: sub_composite
	    start_index: 3857
	    end_index: 3862
	    text: 'os.ls(module_dir)'
	}, sym.SymbolStr{
	    name: '()fn'
	    typ: sub_composite
	    start_index: 3867
	    end_index: 3877
	    text: 'symdb.prefs.should_compile_filtered_files(module_dir, files)'
	}, sym.SymbolStr{
	    name: '()fn'
	    typ: sub_composite
	    start_index: 3917
	    end_index: 3926
	    text: 'ls.logger.info('find_other_module_df_locationlink-->',2)'
	}]

